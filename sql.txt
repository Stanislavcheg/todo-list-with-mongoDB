SQL task
Given tables:
★ tasks (id, name, status, project_id)
★ projects (id, name)
Write the queries for:
1. get all statuses, not repeating, alphabetically ordered
2. get the count of all tasks in each project, order by tasks count descending
3. get the count of all tasks in each project, order by projects names
4. get the tasks for all projects having the name beginning with “N” letter
5. get the list of all projects containing the ‘a’ letter in the middle of the name, and show the tasks count near each project. Mention that there can exist projects without tasks and tasks with project_id=NULL
6. get the list of tasks with duplicate names. Order alphabetically
7. get the list of tasks having several exact matches of both name and status, from the project ‘Garage’. Order by matches count
8. get the list of project names having more than 10 tasks in status ‘completed’. Order by project_id


1. SELECT DISTINCT status
   FROM tasks
   ORDER BY status

2. SELECT projects.id, projects.name, COUNT(tasks.id) AS taskCount
   FROM tasks INNER JOIN projects
   ON tasks.project_id = projects.id
   GROUP BY projects.id
   ORDER BY taskCount DESC

3. SELECT projects.id, projects.name, COUNT(tasks.id) AS taskCount
   FROM tasks 
   INNER JOIN projects
   ON tasks.project_id = projects.id
   GROUP BY projects.id
   ORDER BY projects.name

4. SELECT projects.id, projects.name, task.name
   FROM tasks 
   INNER JOIN rpojects
   ON tasks.project_id = projects.id
   WHERE tasks.name LIKE 'N%'

5. SELECT projects.id, projects.name, COUNT(tasks.id) AS taskCount
   FROM tasks 
   RIGHT JOIN projects
   ON tasks.project_id = projects.id
   WHERE projects.name LIKE '%a%'
   GROUP BY projects.id

6. SELEСT id, name
   FROM tasks
   WHERE name IN
   (SELECT name FROM tasks GROUP BY name HAVING COUNT(id) >1)
   ORDER BY name

7. 

8. SELECT projects.name
   FROM tasks INNER JOIN projects
   ON tasks.projects_id = projects.id
   WHERE tasks.status = "completed"
   GROUP BY projects.id HAVING COUNT(tasks.name) >10
   ORDER BY projects.id